# This is a basic workflow to help you get started with Actions

name: CI-CD-Pipeline-to-AWS-ElasticBearnStalk

env: 
  EB_PACKAGE_S3_BUCKET_NAME : "zzz.flask-app"
  EB_APPLICAION_NAME: "MyFlask"
  EB_ENVIRONMENT_NAME: "MyFlask-env" 
  DEPLOY_PACKAGE_NAME: "flask-app1-${{ github.sha }}.zip" 
  AWS_REGION_NAME : "eu-west-2"
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  my_ci_pipeline:
    runs-on: ubuntu-latest
  
    steps:
      - name: Git clone our repository
        uses: actions/checkout@v1

      - name: Create ZIP deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id : ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Copy our Deployment to S3 bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/

      - name: Print nice message on completion of CI pipeline
        run: echo "CI Pipeline part finished successfully"

  my_cd_pipeline:
    runs-on: ubuntu-latest
    needs: [my_ci_pipeline]    
  
    steps:
      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id : ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}
        
      - name: Create a new ElasticBeanstalk Application Version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICAION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"
           
      - name: Deploy our new Application Version
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
      
      - name: Print nice message on completion of CD pipeline
        run: echo "CD Pipeline part finished successfully"
          
